"use strict";(self.webpackChunkbabylonjs=self.webpackChunkbabylonjs||[]).push([[9693],{9693:(e,t,s)=>{s.r(t),s.d(t,{FlowGraphConsoleLogBlock:()=>r});var a=s(3006),o=s(4720),g=s(6552),l=s(1137);class r extends a.w{constructor(e){if(super(e),this.message=this.registerDataInput("message",o.Vv),this.logType=this.registerDataInput("logType",o.Vv,"log"),e?.messageTemplate){const t=this._getTemplateMatches(e.messageTemplate);for(const e of t)this.registerDataInput(e,o.Vv)}}_execute(e){const t=this.logType.getValue(e),s=this._getMessageValue(e);"warn"===t?l.V.Warn(s):"error"===t?l.V.Error(s):l.V.Log(s),this.out._activateSignal(e)}getClassName(){return"FlowGraphConsoleLogBlock"}_getMessageValue(e){if(this.config?.messageTemplate){let t=this.config.messageTemplate;const s=this._getTemplateMatches(t);for(const a of s){const s=this.getDataInput(a)?.getValue(e);void 0!==s&&(t=t.replace(new RegExp(`\\{${a}\\}`,"g"),s.toString()))}return t}return this.message.getValue(e)}_getTemplateMatches(e){const t=/\{([^}]+)\}/g,s=[];let a;for(;null!==(a=t.exec(e));)s.push(a[1]);return s}}(0,g.Y5)("FlowGraphConsoleLogBlock",r)}}]);
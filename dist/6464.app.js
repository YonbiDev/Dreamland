"use strict";(self.webpackChunkbabylonjs=self.webpackChunkbabylonjs||[]).push([[6464],{6464:(e,t,r)=>{r.d(t,{DDSTools:()=>p});var a=r(4867),o=r(1137),f=r(6755),n=r(7890);r(8258);const l=131072,s=131072;function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const u=i("DXT1"),c=i("DXT3"),A=i("DXT5"),y=i("DX10");class p{static GetDDSInfo(e){const t=new Int32Array(e.buffer,e.byteOffset,31),r=new Int32Array(e.buffer,e.byteOffset,35);let a=1;t[2]&l&&(a=Math.max(1,t[7]));const o=t[21],f=o===y?r[32]:0;let n=0;switch(o){case 113:n=2;break;case 116:n=1;break;case y:if(10===f){n=2;break}if(2===f){n=1;break}}return{width:t[4],height:t[3],mipmapCount:a,isFourCC:!(4&~t[20]),isRGB:!(64&~t[20]),isLuminance:(t[20]&s)===s,isCube:!(512&~t[28]),isCompressed:o===u||o===c||o===A,dxgiFormat:f,textureType:n}}static _GetHalfFloatAsFloatRGBAArrayBuffer(e,t,r,a,o,f){const l=new Float32Array(a),s=new Uint16Array(o,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);l[i]=(0,n.SX)(s[a]),l[i+1]=(0,n.SX)(s[a+1]),l[i+2]=(0,n.SX)(s[a+2]),p.StoreLODInAlphaChannel?l[i+3]=f:l[i+3]=(0,n.SX)(s[a+3]),i+=4}return l}static _GetHalfFloatRGBAArrayBuffer(e,t,r,a,o,f){if(p.StoreLODInAlphaChannel){const l=new Uint16Array(a),s=new Uint16Array(o,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);l[i]=s[a],l[i+1]=s[a+1],l[i+2]=s[a+2],l[i+3]=(0,n.LZ)(f),i+=4}return l}return new Uint16Array(o,r,a)}static _GetFloatRGBAArrayBuffer(e,t,r,a,o,f){if(p.StoreLODInAlphaChannel){const n=new Float32Array(a),l=new Float32Array(o,r);let s=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);n[s]=l[a],n[s+1]=l[a+1],n[s+2]=l[a+2],n[s+3]=f,s+=4}return n}return new Float32Array(o,r,a)}static _GetFloatAsHalfFloatRGBAArrayBuffer(e,t,r,a,o,f){const l=new Uint16Array(a),s=new Float32Array(o,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++)l[i]=(0,n.LZ)(s[i]),l[i+1]=(0,n.LZ)(s[i+1]),l[i+2]=(0,n.LZ)(s[i+2]),p.StoreLODInAlphaChannel?l[i+3]=(0,n.LZ)(f):l[i+3]=(0,n.LZ)(s[i+3]),i+=4;return l}static _GetFloatAsUIntRGBAArrayBuffer(e,t,r,o,f,n){const l=new Uint8Array(o),s=new Float32Array(f,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const o=4*(t+r*e);l[i]=255*(0,a.Clamp)(s[o]),l[i+1]=255*(0,a.Clamp)(s[o+1]),l[i+2]=255*(0,a.Clamp)(s[o+2]),p.StoreLODInAlphaChannel?l[i+3]=n:l[i+3]=255*(0,a.Clamp)(s[o+3]),i+=4}return l}static _GetHalfFloatAsUIntRGBAArrayBuffer(e,t,r,o,f,l){const s=new Uint8Array(o),i=new Uint16Array(f,r);let u=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const o=4*(t+r*e);s[u]=255*(0,a.Clamp)((0,n.SX)(i[o])),s[u+1]=255*(0,a.Clamp)((0,n.SX)(i[o+1])),s[u+2]=255*(0,a.Clamp)((0,n.SX)(i[o+2])),p.StoreLODInAlphaChannel?s[u+3]=l:s[u+3]=255*(0,a.Clamp)((0,n.SX)(i[o+3])),u+=4}return s}static _GetRGBAArrayBuffer(e,t,r,a,o,f,n,l,s){const i=new Uint8Array(a),u=new Uint8Array(o,r);let c=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);i[c]=u[a+f],i[c+1]=u[a+n],i[c+2]=u[a+l],i[c+3]=u[a+s],c+=4}return i}static _ExtractLongWordOrder(e){return 0===e||255===e||-16777216===e?0:1+p._ExtractLongWordOrder(e>>8)}static _GetRGBArrayBuffer(e,t,r,a,o,f,n,l){const s=new Uint8Array(a),i=new Uint8Array(o,r);let u=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=3*(t+r*e);s[u]=i[a+f],s[u+1]=i[a+n],s[u+2]=i[a+l],u+=3}return s}static _GetLuminanceArrayBuffer(e,t,r,a,o){const f=new Uint8Array(a),n=new Uint8Array(o,r);let l=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=t+r*e;f[l]=n[a],l++}return f}static UploadDDSLevels(e,t,r,a,n,s,i=-1,B,G=!0){let b=null;a.sphericalPolynomial&&(b=[]);const d=!!e.getCaps().s3tc;t.generateMipMaps=n;const F=new Int32Array(r.buffer,r.byteOffset,31);let C,h,m,_,w,D,R,x=0,L=0,O=1;if(542327876!==F[0])return void o.V.Error("Invalid magic number in DDS header");if(!a.isFourCC&&!a.isRGB&&!a.isLuminance)return void o.V.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(a.isCompressed&&!d)return void o.V.Error("Compressed textures are not supported on this platform.");let U=F[22];_=F[1]+4;let S=!1;if(a.isFourCC)switch(C=F[21],C){case u:O=8,L=33777;break;case c:O=16,L=33778;break;case A:O=16,L=33779;break;case 113:S=!0,U=64;break;case 116:S=!0,U=128;break;case y:{_+=20;let e=!1;switch(a.dxgiFormat){case 10:S=!0,U=64,e=!0;break;case 2:S=!0,U=128,e=!0;break;case 88:a.isRGB=!0,a.isFourCC=!1,U=32,e=!0}if(e)break}default:return void o.V.Error(["Unsupported FourCC code:",(k=C,String.fromCharCode(255&k,k>>8&255,k>>16&255,k>>24&255))])}var k;const g=p._ExtractLongWordOrder(F[23]),I=p._ExtractLongWordOrder(F[24]),T=p._ExtractLongWordOrder(F[25]),H=p._ExtractLongWordOrder(F[26]);S&&(L=e._getRGBABufferInternalSizedFormat(a.textureType)),D=1,F[2]&l&&!1!==n&&(D=Math.max(1,F[7]));const X=B||0,v=e.getCaps();for(let o=X;o<s;o++){for(h=F[4],m=F[3],R=0;R<D;++R){if(-1===i||i===R){const f=-1===i?R:0;if(!a.isCompressed&&a.isFourCC){t.format=5,x=h*m*4;let a=null;if(e._badOS||e._badDesktopOS||!v.textureHalfFloat&&!v.textureFloat)128===U?(a=p._GetFloatAsUIntRGBAArrayBuffer(h,m,r.byteOffset+_,x,r.buffer,f),b&&0==f&&b.push(p._GetFloatRGBAArrayBuffer(h,m,r.byteOffset+_,x,r.buffer,f))):64===U&&(a=p._GetHalfFloatAsUIntRGBAArrayBuffer(h,m,r.byteOffset+_,x,r.buffer,f),b&&0==f&&b.push(p._GetHalfFloatAsFloatRGBAArrayBuffer(h,m,r.byteOffset+_,x,r.buffer,f))),t.type=0;else{const e=v.textureFloat&&(G&&v.textureFloatLinearFiltering||!G),o=v.textureHalfFloat&&(G&&v.textureHalfFloatLinearFiltering||!G),n=(128===U||64===U&&!o)&&e?1:(64===U||128===U&&!e)&&o?2:0;let l,s=null;if(128===U)switch(n){case 1:l=p._GetFloatRGBAArrayBuffer,s=null;break;case 2:l=p._GetFloatAsHalfFloatRGBAArrayBuffer,s=p._GetFloatRGBAArrayBuffer;break;case 0:l=p._GetFloatAsUIntRGBAArrayBuffer,s=p._GetFloatRGBAArrayBuffer}else switch(n){case 1:l=p._GetHalfFloatAsFloatRGBAArrayBuffer,s=null;break;case 2:l=p._GetHalfFloatRGBAArrayBuffer,s=p._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:l=p._GetHalfFloatAsUIntRGBAArrayBuffer,s=p._GetHalfFloatAsFloatRGBAArrayBuffer}t.type=n,a=l(h,m,r.byteOffset+_,x,r.buffer,f),b&&0==f&&b.push(s?s(h,m,r.byteOffset+_,x,r.buffer,f):a)}a&&e._uploadDataToTextureDirectly(t,a,o,f)}else if(a.isRGB)t.type=0,24===U?(t.format=4,x=h*m*3,w=p._GetRGBArrayBuffer(h,m,r.byteOffset+_,x,r.buffer,g,I,T),e._uploadDataToTextureDirectly(t,w,o,f)):(t.format=5,x=h*m*4,w=p._GetRGBAArrayBuffer(h,m,r.byteOffset+_,x,r.buffer,g,I,T,H),e._uploadDataToTextureDirectly(t,w,o,f));else if(a.isLuminance){const a=e._getUnpackAlignement(),n=h;x=Math.floor((h+a-1)/a)*a*(m-1)+n,w=p._GetLuminanceArrayBuffer(h,m,r.byteOffset+_,x,r.buffer),t.format=1,t.type=0,e._uploadDataToTextureDirectly(t,w,o,f)}else x=Math.max(4,h)/4*Math.max(4,m)/4*O,w=new Uint8Array(r.buffer,r.byteOffset+_,x),t.type=0,e._uploadCompressedDataToTextureDirectly(t,L,h,m,w,o,f)}_+=U?h*m*(U/8):x,h*=.5,m*=.5,h=Math.max(1,h),m=Math.max(1,m)}if(void 0!==B)break}b&&b.length>0?a.sphericalPolynomial=f.d.ConvertCubeMapToSphericalPolynomial({size:F[4],right:b[0],left:b[1],up:b[2],down:b[3],front:b[4],back:b[5],format:5,type:1,gammaSpace:!1}):a.sphericalPolynomial=void 0}}p.StoreLODInAlphaChannel=!1}}]);